# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: npm ci
  
  slack-notification:
    needs: [build]
    if: ${{ failure() }}
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: GitHubAction CI
          text: 'Unit Test'
          mention: 'here, U01E2PFRPR9'
          channel: '#general'
          if_mention: failure,cancelled
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.
      
#       with:
#         status: custom
#         #fields: repo,commit,eventName,ref,workflow,action,message,author,job,took
#         fields: all
#         custom_payload: |
#           {
#             username: 'GitHub Action CI WorkFlow',
#             icon_emoji: ':octocat:',
#             attachments: [{
#               color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
#               text:
#               `${process.env.AS_REPO}\n
#                ${process.env.AS_COMMIT}\n 
#                ${process.env.AS_EVENT_NAME}\n
#                @${process.env.AS_REF}\n
#                @${process.env.AS_WORKFLOW}\n
#                ${process.env.AS_ACTION}\n
#                ${process.env.AS_MESSAGE}\n 
#                ${process.env.AS_AUTHOR}\n 
#                ${{ job.status }}\n
#                ${process.env.AS_TOOK}`,
#             }]
#           }
#       env:
#         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
